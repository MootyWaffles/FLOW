/* Sample program: I use a graph to simulate a DFA. 
This DFA represents all strings of a's and b's with 
an even number of a's and an even number of b's. */

/* Solver Section */

/* This function simulates the dfa specified above on its parameter input string */

//precondition: dfa, e.g. every character in
//the alphabet is represented uniquely by an out-arc on each node

use 'DFA.flowt';

function simulate(string input) { 

    dfa current = START; 
    print "The first current variable is set.";

    print "Entering the for loop to look through the arcs.";

    for (int i = 0; i < input.length; i++) {

	path next;

	for (path connected: current.arcsOut()){

	    if (connected.symbol == input.substring(i,i+1)){

		next = connected;
		print "Went to the next edge.";

	    }

	}

	if (next){

	    print "Navigating to the node at the end of that edge.";
	    current = next.to;

	}
	else{

	    print "There was a problem.  Now exiting.";
	    return false;

	}

    }

    if (current.isAccepting) {
    	return true;
    }

   return false; 

}

/* All code not within a function definition will execute every time */

string input = "Hello World";

print "Input is '" + input + "'\n"; 

if (simulate(input)) {
	print "Input is accepted.\n";
}

else print "Input is not accepted.\n";